{"ast":null,"code":"import _regeneratorRuntime from \"/home/ai/Decentralized-Exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ai/Decentralized-Exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ai/Decentralized-Exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ai/Decentralized-Exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ai/Decentralized-Exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ai/Decentralized-Exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ai/Decentralized-Exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ai/Decentralized-Exchange/src/components/Balance.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport Spinner from './Spinner';\nimport { loadBalances, depositEther, depositToken, withdrawEther, withdrawToken } from '../store/interactions';\nimport { exchangeSelector, tokenSelector, accountSelector, web3Selector, etherBalanceSelector, tokenBalanceSelector, exchangeEtherBalanceSelector, exchangeTokenBalanceSelector, balancesLoadingSelector, etherDepositAmountSelector, etherWithdrawAmountSelector, tokenDepositAmountSelector, tokenWithdrawAmountSelector } from '../store/selectors';\nimport { // Track state of input amount and declare it when submitted \netherDepositAmountChanged, etherWithdrawAmountChanged, tokenDepositAmountChanged, tokenWithdrawAmountChanged } from '../store/actions';\n\nvar showForm = function showForm(props) {\n  var dispatch = props.dispatch,\n      exchange = props.exchange,\n      web3 = props.web3,\n      account = props.account,\n      etherBalance = props.etherBalance,\n      tokenBalance = props.tokenBalance,\n      exchangeEtherBalance = props.exchangeEtherBalance,\n      exchangeTokenBalance = props.exchangeTokenBalance,\n      etherDepositAmount = props.etherDepositAmount,\n      token = props.token,\n      tokenDepositAmount = props.tokenDepositAmount,\n      etherWithdrawAmount = props.etherWithdrawAmount,\n      tokenWithdrawAmount = props.tokenWithdrawAmount;\n  return React.createElement(Tabs, {\n    defaultActiveKey: \"deposit\",\n    className: \"text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    eventKey: \"deposit\",\n    title: \"Deposit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table table-dark table-sm balance-table-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Token\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Wallet\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Exchange\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"ETH\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, etherBalance), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, exchangeEtherBalance)))), React.createElement(\"form\", {\n    className: \"row\",\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      depositEther(dispatch, exchange, web3, etherDepositAmount, account);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 col-sm pr-sm-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"ETH Amount\",\n    onChange: function onChange(e) {\n      return dispatch(etherDepositAmountChanged(e.target.value));\n    },\n    className: \"form-control form-control-sm text-white input-custom\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-12 col-sm-auto pl-sm-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-block btn-sm text-white button-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Deposit\"))), React.createElement(\"table\", {\n    className: \"table table-dark table-sm balance-table-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"DEFI\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, tokenBalance), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, exchangeTokenBalance)))), React.createElement(\"form\", {\n    className: \"row\",\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      depositToken(dispatch, exchange, web3, token, tokenDepositAmount, account);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 col-sm pr-sm-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"DEFI Amount\",\n    onChange: function onChange(e) {\n      return dispatch(tokenDepositAmountChanged(e.target.value));\n    },\n    className: \"form-control form-control-sm text-white input-custom\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-12 col-sm-auto pl-sm-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-block btn-sm text-white button-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Deposit\")))), React.createElement(Tab, {\n    eventKey: \"withdraw\",\n    title: \"Withdraw\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table table-dark table-sm balance-table-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Token\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Wallet\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Exchange\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"ETH\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, etherBalance), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, exchangeEtherBalance)))), React.createElement(\"form\", {\n    className: \"row\",\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      withdrawEther(dispatch, exchange, web3, etherWithdrawAmount, account);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 col-sm pr-sm-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"ETH Amount\",\n    onChange: function onChange(e) {\n      return dispatch(etherWithdrawAmountChanged(e.target.value));\n    },\n    className: \"form-control form-control-sm text-white input-custom\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-12 col-sm-auto pl-sm-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-block btn-sm text-white button-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Withdraw\"))), React.createElement(\"table\", {\n    className: \"table table-dark table-sm balance-table-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"DEFI\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, tokenBalance), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, exchangeTokenBalance)))), React.createElement(\"form\", {\n    className: \"row\",\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      withdrawToken(dispatch, exchange, web3, token, tokenWithdrawAmount, account);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 col-sm pr-sm-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"DEFI Amount\",\n    onChange: function onChange(e) {\n      return dispatch(tokenWithdrawAmountChanged(e.target.value));\n    },\n    className: \"form-control form-control-sm text-white input-custom\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-12 col-sm-auto pl-sm-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-block btn-sm text-white button-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Withdraw\")))));\n};\n\nvar Balance =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Balance, _Component);\n\n  function Balance() {\n    _classCallCheck(this, Balance);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Balance).apply(this, arguments));\n  }\n\n  _createClass(Balance, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData();\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this$props, dispatch, web3, exchange, token, account;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, dispatch = _this$props.dispatch, web3 = _this$props.web3, exchange = _this$props.exchange, token = _this$props.token, account = _this$props.account;\n                _context.next = 3;\n                return loadBalances(dispatch, web3, exchange, token, account);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"card bg-dark text-white card-custom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header card-header-custom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"h4-custom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"\\xA0 Balance\")), React.createElement(\"div\", {\n        className: \"card-body card-body-custom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, this.props.showForm ? showForm(this.props) : React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Balance;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var balancesLoading = balancesLoadingSelector(state);\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    etherBalance: etherBalanceSelector(state),\n    tokenBalance: tokenBalanceSelector(state),\n    exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n    exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n    balancesLoading: balancesLoading,\n    showForm: !balancesLoading,\n    etherDepositAmount: etherDepositAmountSelector(state),\n    etherWithdrawAmount: etherWithdrawAmountSelector(state),\n    tokenDepositAmount: tokenDepositAmountSelector(state),\n    tokenWithdrawAmount: tokenWithdrawAmountSelector(state)\n  };\n}\n\nexport default connect(mapStateToProps)(Balance);","map":{"version":3,"sources":["/home/ai/Decentralized-Exchange/src/components/Balance.js"],"names":["React","Component","connect","Tabs","Tab","Spinner","loadBalances","depositEther","depositToken","withdrawEther","withdrawToken","exchangeSelector","tokenSelector","accountSelector","web3Selector","etherBalanceSelector","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","balancesLoadingSelector","etherDepositAmountSelector","etherWithdrawAmountSelector","tokenDepositAmountSelector","tokenWithdrawAmountSelector","etherDepositAmountChanged","etherWithdrawAmountChanged","tokenDepositAmountChanged","tokenWithdrawAmountChanged","showForm","props","dispatch","exchange","web3","account","etherBalance","tokenBalance","exchangeEtherBalance","exchangeTokenBalance","etherDepositAmount","token","tokenDepositAmount","etherWithdrawAmount","tokenWithdrawAmount","event","preventDefault","e","target","value","Balance","loadBlockchainData","mapStateToProps","state","balancesLoading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport Spinner from './Spinner'\nimport {\n  loadBalances,\n  depositEther,\n  depositToken,\n  withdrawEther,\n  withdrawToken,\n} from '../store/interactions'\nimport {\n  exchangeSelector,\n  tokenSelector,\n  accountSelector,\n  web3Selector,\n  etherBalanceSelector,\n  tokenBalanceSelector,\n  exchangeEtherBalanceSelector,\n  exchangeTokenBalanceSelector,\n  balancesLoadingSelector,\n  etherDepositAmountSelector,\n  etherWithdrawAmountSelector,\n  tokenDepositAmountSelector,\n  tokenWithdrawAmountSelector,\n} from '../store/selectors'\nimport {\n  // Track state of input amount and declare it when submitted \n  etherDepositAmountChanged,\n  etherWithdrawAmountChanged,\n  tokenDepositAmountChanged,\n  tokenWithdrawAmountChanged,\n} from '../store/actions'\n\n\nconst showForm = (props) => {\n  const {\n    dispatch,\n    exchange,\n    web3,\n    account,\n    etherBalance,\n    tokenBalance,\n    exchangeEtherBalance,\n    exchangeTokenBalance,\n    etherDepositAmount,\n    token,\n    tokenDepositAmount,\n    etherWithdrawAmount,\n    tokenWithdrawAmount\n  } = props\n\n  return(\n    <Tabs defaultActiveKey=\"deposit\" className=\"text-white\">\n\n      <Tab eventKey=\"deposit\" title=\"Deposit\">\n        <table className=\"table table-dark table-sm balance-table-custom\">\n          <thead>\n            <tr>\n              <th>Token</th>\n              <th>Wallet</th>\n              <th>Exchange</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>ETH</td>\n              <td>{etherBalance}</td>\n              <td>{exchangeEtherBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          depositEther(dispatch, exchange, web3, etherDepositAmount, account)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"ETH Amount\"\n            onChange={(e) => dispatch( etherDepositAmountChanged(e.target.value) ) }\n            className=\"form-control form-control-sm text-white input-custom\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" className=\"btn btn-block btn-sm text-white button-custom\">Deposit</button>\n          </div>\n        </form>\n\n        <table className=\"table table-dark table-sm balance-table-custom\">\n          <tbody>\n            <tr>\n              <td>DEFI</td>\n              <td>{tokenBalance}</td>\n              <td>{exchangeTokenBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          depositToken(dispatch, exchange, web3, token, tokenDepositAmount, account)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"DEFI Amount\"\n            onChange={(e) => dispatch( tokenDepositAmountChanged(e.target.value) )}\n            className=\"form-control form-control-sm text-white input-custom\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" className=\"btn btn-block btn-sm text-white button-custom\">Deposit</button>\n          </div>\n        </form>\n      </Tab>\n\n      <Tab eventKey=\"withdraw\" title=\"Withdraw\">\n        <table className=\"table table-dark table-sm balance-table-custom\">\n          <thead>\n            <tr>\n              <th>Token</th>\n              <th>Wallet</th>\n              <th>Exchange</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>ETH</td>\n              <td>{etherBalance}</td>\n              <td>{exchangeEtherBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          withdrawEther(dispatch, exchange, web3, etherWithdrawAmount, account)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"ETH Amount\"\n            onChange={(e) => dispatch( etherWithdrawAmountChanged(e.target.value) )}\n            className=\"form-control form-control-sm text-white input-custom\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" className=\"btn btn-block btn-sm text-white button-custom\">Withdraw</button>\n          </div>\n        </form>\n\n        <table className=\"table table-dark table-sm balance-table-custom\">\n          <tbody>\n            <tr>\n              <td>DEFI</td>\n              <td>{tokenBalance}</td>\n              <td>{exchangeTokenBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          withdrawToken(dispatch, exchange, web3, token, tokenWithdrawAmount, account)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"DEFI Amount\"\n            onChange={(e) => dispatch( tokenWithdrawAmountChanged(e.target.value) )}\n            className=\"form-control form-control-sm text-white input-custom\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" className=\"btn btn-block btn-sm text-white button-custom\">Withdraw</button>\n          </div>\n        </form>\n      </Tab>\n      \n    </Tabs>\n  )\n}\n\nclass Balance extends Component {\n  componentWillMount() {\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const { dispatch, web3, exchange, token, account } = this.props\n    await loadBalances(dispatch, web3, exchange, token, account)\n  }\n\n  render() {\n    return (\n      <div className=\"card bg-dark text-white card-custom\">\n        <div className=\"card-header card-header-custom\">\n          <h4 className=\"h4-custom\">&nbsp; Balance</h4>\n        </div>\n        <div className=\"card-body card-body-custom\">\n          {this.props.showForm ? showForm(this.props) : <Spinner />}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const balancesLoading = balancesLoadingSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    etherBalance: etherBalanceSelector(state),\n    tokenBalance: tokenBalanceSelector(state),\n    exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n    exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n    balancesLoading,\n    showForm: !balancesLoading,\n    etherDepositAmount: etherDepositAmountSelector(state),\n    etherWithdrawAmount: etherWithdrawAmountSelector(state),\n    tokenDepositAmount: tokenDepositAmountSelector(state),\n    tokenWithdrawAmount: tokenWithdrawAmountSelector(state),\n  }\n}\n\nexport default connect(mapStateToProps)(Balance)\n"]},"metadata":{},"sourceType":"module"}