{"ast":null,"code":"import _classCallCheck from \"/home/ai/Decentralized-Exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ai/Decentralized-Exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ai/Decentralized-Exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ai/Decentralized-Exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ai/Decentralized-Exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ai/Decentralized-Exchange/src/components/OrderBook.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport Spinner from './Spinner';\nimport { orderBookSelector, orderBookLoadedSelector, exchangeSelector, accountSelector, orderFillingSelector } from '../store/selectors';\nimport { fillOrder } from '../store/interactions';\n\nvar renderOrder = function renderOrder(order, props) {\n  var dispatch = props.dispatch,\n      exchange = props.exchange,\n      account = props.account;\n  return React.createElement(OverlayTrigger, {\n    key: order.id,\n    placement: \"auto\",\n    overlay: React.createElement(Tooltip, {\n      id: order.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Click here to \".concat(order.orderFillAction)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    key: order.id,\n    className: \"order-book-order\",\n    onClick: function onClick(e) {\n      return fillOrder(dispatch, exchange, order, account);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, order.tokenAmount), React.createElement(\"td\", {\n    className: \"text-\".concat(order.orderTypeClass),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, order.tokenPrice), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, order.etherAmount)));\n};\n\nvar showOrderBook = function showOrderBook(props) {\n  var orderBook = props.orderBook;\n  return React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, orderBook.sellOrders.map(function (order) {\n    return renderOrder(order, props);\n  }), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"DEFI\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"DEFI/ETH\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"ETH\")), orderBook.buyOrders.map(function (order) {\n    return renderOrder(order, props);\n  }));\n};\n\nvar OrderBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrderBook, _Component);\n\n  function OrderBook() {\n    _classCallCheck(this, OrderBook);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(OrderBook).apply(this, arguments));\n  }\n\n  _createClass(OrderBook, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card bg-dark text-white card-custom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header card-header-custom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"h4-custom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"\\xA0 Order Book\")), React.createElement(\"div\", {\n        className: \"card-body card-body-custom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-dark table-custom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.showOrderBook ? showOrderBook(this.props) : React.createElement(Spinner, {\n        type: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return OrderBook;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var orderBookLoaded = orderBookLoadedSelector(state);\n  var orderFilling = orderFillingSelector(state);\n  return {\n    orderBook: orderBookSelector(state),\n    showOrderBook: orderBookLoaded && !orderFilling,\n    exchange: exchangeSelector(state),\n    account: accountSelector(state)\n  };\n}\n\nexport default connect(mapStateToProps)(OrderBook);","map":{"version":3,"sources":["/home/ai/Decentralized-Exchange/src/components/OrderBook.js"],"names":["React","Component","connect","OverlayTrigger","Tooltip","Spinner","orderBookSelector","orderBookLoadedSelector","exchangeSelector","accountSelector","orderFillingSelector","fillOrder","renderOrder","order","props","dispatch","exchange","account","id","orderFillAction","e","tokenAmount","orderTypeClass","tokenPrice","etherAmount","showOrderBook","orderBook","sellOrders","map","buyOrders","OrderBook","mapStateToProps","state","orderBookLoaded","orderFilling"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,iBAAxC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,iBADF,EAEEC,uBAFF,EAGEC,gBAHF,EAIEC,eAJF,EAKEC,oBALF,QAMO,oBANP;AAOA,SAASC,SAAT,QAA0B,uBAA1B;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,KAAR,EAAkB;AAAA,MAC5BC,QAD4B,GACID,KADJ,CAC5BC,QAD4B;AAAA,MAClBC,QADkB,GACIF,KADJ,CAClBE,QADkB;AAAA,MACRC,OADQ,GACIH,KADJ,CACRG,OADQ;AAGpC,SACE,oBAAC,cAAD;AACE,IAAA,GAAG,EAAEJ,KAAK,CAACK,EADb;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EACL,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAEL,KAAK,CAACK,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACoBL,KAAK,CAACM,eAD1B,EAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AACE,IAAA,GAAG,EAAEN,KAAK,CAACK,EADb;AAEE,IAAA,SAAS,EAAC,kBAFZ;AAGE,IAAA,OAAO,EAAE,iBAACE,CAAD;AAAA,aAAOT,SAAS,CAACI,QAAD,EAAWC,QAAX,EAAqBH,KAArB,EAA4BI,OAA5B,CAAhB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAK,CAACQ,WAAX,CALF,EAME;AAAI,IAAA,SAAS,iBAAUR,KAAK,CAACS,cAAhB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDT,KAAK,CAACU,UAAtD,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,KAAK,CAACW,WAAX,CAPF,CATF,CADF;AAqBD,CAxBD;;AA0BA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACX,KAAD,EAAW;AAAA,MACvBY,SADuB,GACTZ,KADS,CACvBY,SADuB;AAG/B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,CAACC,UAAV,CAAqBC,GAArB,CAAyB,UAACf,KAAD;AAAA,WAAWD,WAAW,CAACC,KAAD,EAAQC,KAAR,CAAtB;AAAA,GAAzB,CADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CAFF,EAOGY,SAAS,CAACG,SAAV,CAAoBD,GAApB,CAAwB,UAACf,KAAD;AAAA,WAAWD,WAAW,CAACC,KAAD,EAAQC,KAAR,CAAtB;AAAA,GAAxB,CAPH,CADF;AAWD,CAdD;;IAgBMgB,S;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,+BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKhB,KAAL,CAAWW,aAAX,GAA2BA,aAAa,CAAC,KAAKX,KAAN,CAAxC,GAAuD,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD3D,CADF,CAJF,CADF,CADF;AAcD;;;;EAhBqBb,S;;AAmBxB,SAAS8B,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAMC,eAAe,GAAG1B,uBAAuB,CAACyB,KAAD,CAA/C;AACA,MAAME,YAAY,GAAGxB,oBAAoB,CAACsB,KAAD,CAAzC;AAEA,SAAO;AACLN,IAAAA,SAAS,EAAEpB,iBAAiB,CAAC0B,KAAD,CADvB;AAELP,IAAAA,aAAa,EAAEQ,eAAe,IAAI,CAACC,YAF9B;AAGLlB,IAAAA,QAAQ,EAAER,gBAAgB,CAACwB,KAAD,CAHrB;AAILf,IAAAA,OAAO,EAAER,eAAe,CAACuB,KAAD;AAJnB,GAAP;AAOD;;AAED,eAAe9B,OAAO,CAAC6B,eAAD,CAAP,CAAyBD,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport Spinner from './Spinner'\nimport {\n  orderBookSelector,\n  orderBookLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  orderFillingSelector\n} from '../store/selectors'\nimport { fillOrder } from '../store/interactions'\n\n\nconst renderOrder = (order, props) => {\n  const { dispatch, exchange, account } = props\n\n  return(\n    <OverlayTrigger\n      key={order.id}\n      placement='auto'\n      overlay={\n        <Tooltip id={order.id}>\n          {`Click here to ${order.orderFillAction}`}\n        </Tooltip>\n      }\n    >\n      <tr \n        key={order.id}\n        className='order-book-order'\n        onClick={(e) => fillOrder(dispatch, exchange, order, account)}\n      >\n        <td>{order.tokenAmount}</td>\n        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n        <td>{order.etherAmount}</td>\n      </tr>\n    </OverlayTrigger>\n  )\n}\n\nconst showOrderBook = (props) => {\n  const { orderBook } = props\n\n  return(\n    <tbody>\n      {orderBook.sellOrders.map((order) => renderOrder(order, props))}\n      <tr>\n        <th>DEFI</th>\n        <th>DEFI/ETH</th>\n        <th>ETH</th>\n      </tr>\n      {orderBook.buyOrders.map((order) => renderOrder(order, props))}\n    </tbody>\n  )\n}\n\nclass OrderBook extends Component {\n  render() {\n    return (\n      <div className=\"vertical\">\n        <div className=\"card bg-dark text-white card-custom\">\n          <div className=\"card-header card-header-custom\">\n            <h4 className=\"h4-custom\">&nbsp; Order Book</h4>\n          </div>\n          <div className=\"card-body card-body-custom\">\n            <table className=\"table table-dark table-custom\">\n              { this.props.showOrderBook ? showOrderBook(this.props) : <Spinner type='table' /> }\n            </table>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const orderBookLoaded = orderBookLoadedSelector(state)\n  const orderFilling = orderFillingSelector(state)\n\n  return {\n    orderBook: orderBookSelector(state),\n    showOrderBook: orderBookLoaded && !orderFilling,\n    exchange: exchangeSelector(state),\n    account: accountSelector(state)\n    \n  }\n}\n\nexport default connect(mapStateToProps)(OrderBook)\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}